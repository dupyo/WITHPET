<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.UserMapper">
	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="UserDTO">
		
		INSERT INTO USER_INFO
			(
				USER_NAME,
				USER_EMAIL,
				USER_TEL,
				PASSWORD,
				USER_AUTH,
				BIRTHGENDER,
				REG_DATE
				
			)
			VALUES
			(
				#{userName},
				#{userEmail},
				#{userTel},
				#{password},
				1,
				#{birthGender},
				NOW()
			)
			
	</insert>
	
	<!-- 로그인 -->
	<select id="userLoginProc" parameterType="UserDTO" resultType="UserDTO">
		
		SELECT 
			USER_NO as userNo,
			USER_EMAIL as userEmail,
			USER_NAME as userName,
			USER_TEL as userTel,
			PASSWORD as password,
			REG_DATE as regDate,
			REG_NO as regNo,
			UPD_DATE as updDate,
			UPD_NO as updNo,
			BIRTHGENDER as birthGender,
			USER_AUTH as userAuth
		FROM USER_INFO
		WHERE (USER_EMAIL=#{userEmail} OR USER_NAME=#{userName}) AND PASSWORD=#{password}
		<!-- 정보가 틀리면 select문을 실핼하지 못하고 null값을 반환함. -->
	</select>
	
	<!-- 회원정보수정 -->
	<update id="updateUserInfo" parameterType="UserDTO">
	
		UPDATE USER_INFO
		SET USER_NAME=#{userName},
			USER_EMAIL=#{userEmail},
			USER_TEL=#{userTel},
			PASSWORD=#{password},
			UPD_DATE=NOW(),
			UPD_NO=#{userNo}
		WHERE USER_NO=#{userNo}
	
	</update>
	
	<!-- 회원정보수정 getMyNameChk 닉네임 조회 체크 AJAX -->
	<select id="getMyNameChk" parameterType="UserDTO" resultType="int">
	
	SELECT COUNT(USER_NAME)
	FROM USER_INFO
	WHERE USER_NAME=#{userName} AND USER_NO!=#{userNo}
	<!-- userNo가 다르면서 수정하려는 userName이 동일한 회원이 존재하면 수정불가 -->
	</select>

	<!-- 회원가입 getNameChk 닉네임 조회 체크 AJAX -->
	<select id="getNameChk" parameterType="UserDTO" resultType="int">
	
	SELECT COUNT(USER_NAME)
	FROM USER_INFO
	WHERE USER_NAME=#{userName}
	<!-- count()의 값이 1이면 닉네임 중복, 0이면 사용가능 -->
	</select>

	<!-- 회원가입 getEmailChk 닉네임 조회 체크 AJAX -->
	<select id="getEmailChk" parameterType="UserDTO" resultType="int">
	
	SELECT COUNT(USER_EMAIL)
	FROM USER_INFO
	WHERE USER_EMAIL=#{userEmail}
	<!-- count()의 값이 1이면 이메일 중복, 0이면 사용가능 -->
	</select>
	
	<!-- 회원정보삭제 -->
	<delete id="deleteUserProc" parameterType="string">
		DELETE
		FROM USER_INFO
		WHERE USER_NO=#{userNo}
	</delete>
	
</mapper>